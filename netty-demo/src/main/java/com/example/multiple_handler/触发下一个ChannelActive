Netty 中的事件分为inbound 事件和outbound 事件。inbound 事件通常由I/O线程触发，例如TCP 链路建立事件、链路关闭事件、读事件、异常通知事件等。Outbound 事件通常是I/O 用户主动发起的网络I/O 操作，例如用户发起的连接操作、绑定操作、消息发送等操作。

我们常用的inbound事件有：

ChannelHandlerContext fireChannelRegistered() //channel注册事件
ChannelHandlerContext fireChannelActive() //channel激活事件
ChannelHandlerContext fireExceptionCaught(Throwable var1) //channel异常处理事件
ChannelHandlerContext fireUserEventTriggered(Object var1) //用户自定义事件
ChannelHandlerContext fireChannelRead(Object var1) //读事件
pipeline 中以fireXXX命名的方法都是从I/O 线程流向用户业务Handler的inbound 事件，它们的实现因功能而异，但是处理步骤类似：

调用HeadHandler对应的fireXXX 方法

执行事件相关的逻辑操作

常用的outbound事件有：

ChannelFuture bind(SocketAddress var1, ChannelPromise var2) //绑定地址
ChannelFuture connect(SocketAddress var1, ChannelPromise var2) //连接服务器
ChannelFuture write(Object var1) //发送事件
ChannelHandlerContext flush() //刷新事件
上面我们说到事件，netty的事件机制是由前至后的，一般来说，都是一个channel的ChannnelActive方法中调用fireChannelActive来触发调用下一个handler中的ChannelActive方法，即你在ChannelPipeline中添加handler的时候，要在第一个handler的channelActive方法中调用fireChannelActive，以此来触发下一个事件。我们再来写一个案例说明一下：